{"version":3,"sources":["helpers.js","components/ControlPresupuesto.js","components/Error.js","components/Formulario.js","components/Gasto.js","components/Listado.js","components/Pregunta.js","App.js","reportWebVitals.js","index.js"],"names":["revisarPresupuesto","presupuesto","restante","ControlPresupuesto","className","Error","mensaje","Formulario","guardarGasto","guardarCrearGasto","useState","nombre","guardarNombre","cantidad","guardarCantidad","error","guardarError","onSubmit","e","preventDefault","isNaN","trim","gasto","id","shortid","generate","type","placeholder","value","onChange","target","parseInt","Gasto","Listado","gastos","map","Pregunta","guardarPresupuesto","guardarRestante","actualizarPregunta","App","mostrarPregunta","guardarGastos","crearGasto","useEffect","presupuestoRestante","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAAaA,EAAqB,SAACC,EAAaC,GAW9C,OARID,EAAc,EAAIC,EACZ,qBACCD,EAAc,EAAIC,EACnB,sBAEA,uB,OCYGC,EAhBY,SAAC,GAA+B,IAA7BF,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACzC,OACE,eAAC,WAAD,WACE,sBAAKE,UAAU,sBAAf,4BAAqDH,KACrD,sBAAKG,UAAWJ,EAAmBC,EAAaC,GAAhD,yBACeA,SCENG,EARD,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACf,OAAO,mBAAGF,UAAU,qBAAb,SAAmCE,K,gBC4E7BC,EA3EI,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,aAAcC,EAAwB,EAAxBA,kBAAwB,EAC1BC,mBAAS,IADiB,mBACnDC,EADmD,KAC3CC,EAD2C,OAEtBF,mBAAS,IAFa,mBAEnDG,EAFmD,KAEzCC,EAFyC,OAG5BJ,oBAAS,GAHmB,mBAGnDK,EAHmD,KAG5CC,EAH4C,KAgC1D,OACE,uBAAMC,SA3Ba,SAACC,GAIpB,GAHAA,EAAEC,iBAGEN,EAAW,GAAKO,MAAMP,IAA+B,KAAlBF,EAAOU,OAC5CL,GAAa,OADf,CAIAA,GAAa,GAGb,IAAMM,EAAQ,CACZX,SACAE,WACAU,GAAIC,IAAQC,YAIdjB,EAAac,GACbb,GAAkB,GAGlBG,EAAc,IACdE,EAAgB,MAIhB,UACE,2DAECC,EACC,cAAC,EAAD,CAAOT,QAAQ,2DACb,KAEJ,sBAAKF,UAAU,QAAf,UACE,qDACA,uBACEsB,KAAK,OACLtB,UAAU,eACVuB,YAAY,iBACZC,MAAOjB,EAEPkB,SAAU,SAACX,GAAD,OAAON,EAAcM,EAAEY,OAAOF,aAG5C,sBAAKxB,UAAU,QAAf,UACE,qDACA,uBACEsB,KAAK,SACLtB,UAAU,eACVuB,YAAY,MACZC,MAAOf,EACPgB,SAAU,SAACX,GAAD,OAAOJ,EAAgBiB,SAASb,EAAEY,OAAOF,cAGvD,uBACEF,KAAK,SACLtB,UAAU,8BACVwB,MAAM,sBCrDCI,EAbD,SAAC,GAAe,IAAbV,EAAY,EAAZA,MACf,OACE,oBAAIlB,UAAU,SAAd,SACE,8BACGkB,EAAMX,OACP,uBAAMP,UAAU,QAAhB,eAA2BkB,EAAMT,kBCW1BoB,EAfC,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACjB,OACE,sBAAK9B,UAAU,oBAAf,UACE,yCACC8B,EAAOC,KAAI,SAACb,GAAD,OACV,cAAC,EAAD,CAAsBA,MAAOA,GAAjBA,EAAMC,WCoDXa,EAzDE,SAAC,GAIX,IAHLC,EAGI,EAHJA,mBACAC,EAEI,EAFJA,gBACAC,EACI,EADJA,mBACI,EACgC7B,mBAAS,GADzC,mBACGG,EADH,KACaC,EADb,OAE0BJ,oBAAS,GAFnC,mBAEGK,EAFH,KAEUC,EAFV,KA0BJ,OACE,eAAC,WAAD,WACE,0DACCD,EAAQ,cAAC,EAAD,CAAOT,QAAQ,iCAAoC,KAC5D,uBAAMW,SApBiB,SAACC,GAC1BA,EAAEC,iBAGEN,EAAW,GAAKO,MAAMP,GACxBG,GAAa,IAKfA,GAAa,GACbqB,EAAmBxB,GACnByB,EAAgBzB,GAChB0B,GAAmB,KAOjB,UACE,uBACEb,KAAK,SACLtB,UAAU,eACVuB,YAAY,2BACZE,SA9BmB,SAACX,GAC1BJ,EAAgBiB,SAASb,EAAEY,OAAOF,WA+B9B,uBACEF,KAAK,SACLtB,UAAU,8BACVwB,MAAM,+BCgBDY,MA1Df,WAAe,MAE6B9B,mBAAS,GAFtC,mBAENT,EAFM,KAEOoC,EAFP,OAGuB3B,mBAAS,GAHhC,mBAGNR,EAHM,KAGIoC,EAHJ,OAIiC5B,oBAAS,GAJ1C,mBAIN+B,EAJM,KAIWF,EAJX,OAKmB7B,mBAAS,IAL5B,mBAKNwB,EALM,KAKEQ,EALF,OAMiBhC,mBAAS,IAN1B,mBAMNY,EANM,KAMCd,EAND,OAO2BE,oBAAS,GAPpC,mBAONiC,EAPM,KAOMlC,EAPN,KAwBb,OAdAmC,qBAAU,WAER,GAAID,EAAY,CACdD,EAAc,GAAD,mBAAKR,GAAL,CAAaZ,KAG1B,IAAMuB,EAAsB3C,EAAWoB,EAAMT,SAC7CyB,EAAgBO,GAGhBpC,GAAkB,MAEnB,CAACa,EAAOqB,EAAYT,EAAQhC,IAG7B,qBAAKE,UAAU,YAAf,SACE,mCACE,+CACA,qBAAKA,UAAU,gCAAf,SACGqC,EACC,cAAC,EAAD,CACEJ,mBAAoBA,EACpBC,gBAAiBA,EACjBC,mBAAoBA,IAGtB,sBAAKnC,UAAU,MAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,cAAC,EAAD,CACEI,aAAcA,EACdC,kBAAmBA,MAGvB,sBAAKL,UAAU,kBAAf,UACE,cAAC,EAAD,CAAS8B,OAAQA,IACjB,cAAC,EAAD,CACEjC,YAAaA,EACbC,SAAUA,kBCzCb4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1215850e.chunk.js","sourcesContent":["export const revisarPresupuesto = (presupuesto, restante) => {\r\n  let clase;\r\n\r\n  if (presupuesto / 4 > restante) {\r\n    clase = \"alert alert-danger\";\r\n  } else if (presupuesto / 2 > restante) {\r\n    clase = \"alert alert-warning\";\r\n  } else {\r\n    clase = \"alert alert-success\";\r\n  }\r\n\r\n  return clase;\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport { revisarPresupuesto } from \"../helpers\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ControlPresupuesto = ({ presupuesto, restante }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"alert alert-primary\">Presupuesto: $ {presupuesto}</div>\r\n      <div className={revisarPresupuesto(presupuesto, restante)}>\r\n        Restante: $ {restante}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nControlPresupuesto.propTypes = {\r\n  presupuesto: PropTypes.number.isRequired,\r\n  restante: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default ControlPresupuesto;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Error = ({ mensaje }) => {\r\n  return <p className=\"alert alert-danger\">{mensaje}</p>;\r\n};\r\n\r\nError.propTypes = {\r\n  mensaje: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Error;\r\n","import React, { useState } from \"react\";\r\nimport Error from \"./Error\";\r\nimport shortid from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Formulario = ({ guardarGasto, guardarCrearGasto }) => {\r\n  const [nombre, guardarNombre] = useState(\"\");\r\n  const [cantidad, guardarCantidad] = useState(\"\");\r\n  const [error, guardarError] = useState(false);\r\n\r\n  // Cuando el usuario agrega un gastos\r\n  const agregarGasto = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validar\r\n    if (cantidad < 1 || isNaN(cantidad) || nombre.trim() === \"\") {\r\n      guardarError(true);\r\n      return;\r\n    }\r\n    guardarError(false);\r\n\r\n    // Construit el gastos\r\n    const gasto = {\r\n      nombre,\r\n      cantidad,\r\n      id: shortid.generate(),\r\n    };\r\n\r\n    // Psar el Gasto al componente principal\r\n    guardarGasto(gasto);\r\n    guardarCrearGasto(true);\r\n\r\n    // Resetear el formulario\r\n    guardarNombre(\"\");\r\n    guardarCantidad(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={agregarGasto}>\r\n      <h2>Agrega tus gastos aquí</h2>\r\n\r\n      {error ? (\r\n        <Error mensaje=\"Ambos campos son obligatorios o Presupuesto Incorrecto\" />\r\n      ) : null}\r\n\r\n      <div className=\"campo\">\r\n        <label>Nombre del Gasto</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"u-full-width\"\r\n          placeholder=\"Ej. Transporte\"\r\n          value={nombre}\r\n          // Con la siguiente función, lo que el usuario escriba se agregará al State\r\n          onChange={(e) => guardarNombre(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"campo\">\r\n        <label>Nombre del Gasto</label>\r\n        <input\r\n          type=\"number\"\r\n          className=\"u-full-width\"\r\n          placeholder=\"500\"\r\n          value={cantidad}\r\n          onChange={(e) => guardarCantidad(parseInt(e.target.value))}\r\n        />\r\n      </div>\r\n      <input\r\n        type=\"submit\"\r\n        className=\"button-primary u-full-width\"\r\n        value=\"Agregar Gasto\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nFormulario.propTypes = {\r\n  guardarGasto: PropTypes.func.isRequired,\r\n  guardarCrearGasto: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Formulario;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Gasto = ({ gasto }) => {\r\n  return (\r\n    <li className=\"gastos\">\r\n      <p>\r\n        {gasto.nombre}\r\n        <span className=\"gasto\">$ {gasto.cantidad}</span>\r\n      </p>\r\n    </li>\r\n  );\r\n};\r\n\r\nGasto.propTypes = { gasto: PropTypes.object.isRequired };\r\n\r\nexport default Gasto;\r\n","import React from \"react\";\r\nimport Gasto from \"./Gasto\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Listado = ({ gastos }) => {\r\n  return (\r\n    <div className=\"gastos-realizados\">\r\n      <h2>Listado</h2>\r\n      {gastos.map((gasto) => (\r\n        <Gasto key={gasto.id} gasto={gasto} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nListado.propTypes = {\r\n  gastos: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Listado;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport Error from \"./Error\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Pregunta = ({\r\n  guardarPresupuesto,\r\n  guardarRestante,\r\n  actualizarPregunta,\r\n}) => {\r\n  const [cantidad, guardarCantidad] = useState(0);\r\n  const [error, guardarError] = useState(false);\r\n\r\n  // Función que lee el presupuesto\r\n  const definirPresupuesto = (e) => {\r\n    guardarCantidad(parseInt(e.target.value));\r\n  };\r\n\r\n  // Submit para definir el presupuesto\r\n  const agregarPresupuesto = (e) => {\r\n    e.preventDefault();\r\n\r\n    // validator\r\n    if (cantidad < 1 || isNaN(cantidad)) {\r\n      guardarError(true);\r\n      return;\r\n    }\r\n\r\n    // Si se pasa la validación\r\n    guardarError(false);\r\n    guardarPresupuesto(cantidad);\r\n    guardarRestante(cantidad);\r\n    actualizarPregunta(false);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2>Señala tu presupuesto</h2>\r\n      {error ? <Error mensaje=\"El presupuesto es Incorrecto\" /> : null}\r\n      <form onSubmit={agregarPresupuesto}>\r\n        <input\r\n          type=\"number\"\r\n          className=\"u-full-width\"\r\n          placeholder=\"Señala tu presupuesto\"\r\n          onChange={definirPresupuesto}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"button-primary u-full-width\"\r\n          value=\"Definir Presupuesto\"\r\n        />\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPregunta.propTypes = {\r\n  guardarPresupuesto: PropTypes.func.isRequired,\r\n  guardarRestante: PropTypes.func.isRequired,\r\n  actualizarPregunta: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Pregunta;\r\n","import { useState, useEffect } from \"react\";\nimport ControlPresupuesto from \"./components/ControlPresupuesto\";\nimport Formulario from \"./components/Formulario\";\nimport Listado from \"./components/Listado\";\nimport Pregunta from \"./components/Pregunta\";\n\nfunction App() {\n  // Definir el State\n  const [presupuesto, guardarPresupuesto] = useState(0);\n  const [restante, guardarRestante] = useState(0);\n  const [mostrarPregunta, actualizarPregunta] = useState(true);\n  const [gastos, guardarGastos] = useState([]);\n  const [gasto, guardarGasto] = useState({});\n  const [crearGasto, guardarCrearGasto] = useState(false);\n\n  // UseEffect que actualiza el restante\n  useEffect(() => {\n    // Agrega el nuevo presupuesto\n    if (crearGasto) {\n      guardarGastos([...gastos, gasto]);\n\n      // Resta del presupuesto actual\n      const presupuestoRestante = restante - gasto.cantidad;\n      guardarRestante(presupuestoRestante);\n\n      // Resetea a false\n      guardarCrearGasto(false);\n    }\n  }, [gasto, crearGasto, gastos, restante]);\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h1>Gasto Semanal</h1>\n        <div className=\"contenido-principal contenido\">\n          {mostrarPregunta ? (\n            <Pregunta\n              guardarPresupuesto={guardarPresupuesto}\n              guardarRestante={guardarRestante}\n              actualizarPregunta={actualizarPregunta}\n            />\n          ) : (\n            <div className=\"row\">\n              <div className=\"one-half column\">\n                <Formulario\n                  guardarGasto={guardarGasto}\n                  guardarCrearGasto={guardarCrearGasto}\n                />\n              </div>\n              <div className=\"one-half column\">\n                <Listado gastos={gastos} />\n                <ControlPresupuesto\n                  presupuesto={presupuesto}\n                  restante={restante}\n                />\n              </div>\n            </div>\n          )}\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}