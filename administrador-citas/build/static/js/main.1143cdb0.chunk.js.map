{"version":3,"sources":["components/Cita.js","components/Formulario.js","App.js","index.js"],"names":["Cita","cita","eliminarCita","console","log","mascota","propietario","fecha","hora","sintomas","id","className","onClick","Formulario","crearCita","useState","setCita","error","setError","actualizarState","e","target","name","value","onSubmit","preventDefault","trim","uuid","type","placeholder","onChange","propTypes","PropTypes","func","isRequired","App","citasIniciales","JSON","parse","localStorage","getItem","citas","guardarCitas","useEffect","setItem","stringify","nuevasCitas","filter","titulo","length","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1143cdb0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Cita = ({ cita, eliminarCita }) => {\r\n  console.log(cita);\r\n  const { mascota, propietario, fecha, hora, sintomas, id } = cita;\r\n  return (\r\n    <div className=\"cita\">\r\n      <p>\r\n        Mascota: <span>{mascota}</span>\r\n      </p>\r\n      <p>\r\n        Dueño: <span>{propietario}</span>\r\n      </p>\r\n      <p>\r\n        Fecha: <span>{fecha}</span>\r\n      </p>\r\n      <p>\r\n        Hola: <span>{hora}</span>\r\n      </p>\r\n      <p>\r\n        Síntomas: <span>{sintomas}</span>\r\n      </p>\r\n      <button\r\n        className=\"button eliminar u-full-width\"\r\n        onClick={() => eliminarCita(id)}\r\n      >\r\n        Eliminar\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nCita.propTypes = {\r\n  cita: PropTypes.object.isRequired,\r\n  eliminar: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Cita;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport uuid from \"uuid/v4\";\r\n\r\nconst Formulario = ({ crearCita }) => {\r\n  const [cita, setCita] = useState({\r\n    mascota: \"\",\r\n    propietario: \"\",\r\n    fecha: \"\",\r\n    hora: \"\",\r\n    sintomas: \"\",\r\n  });\r\n\r\n  const [error, setError] = useState(false);\r\n\r\n  // Función que se ejecuta cada vez que el usuario escribe en un input\r\n  const actualizarState = (e) => {\r\n    setCita({\r\n      ...cita,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  \r\n  // Extraer los valores\r\n  const { mascota, propietario, fecha, hora, sintomas } = cita;\r\n\r\n  const submitCita = (e) => {\r\n    e.preventDefault();\r\n    // Validar\r\n    if (\r\n      mascota.trim() === \"\" ||\r\n      propietario.trim() === \"\" ||\r\n      fecha.trim() === \"\" ||\r\n      hora.trim() === \"\" ||\r\n      sintomas.trim() === \"\"\r\n    ) {\r\n      setError(true);\r\n      return;\r\n    }\r\n\r\n    //Eliminar el mensaje previo de error\r\n    setError(false);\r\n\r\n    // Asignar ID\r\n    cita.id = uuid();\r\n\r\n    //Crear la cita\r\n    crearCita(cita);\r\n\r\n    // Reiniciar el formulario\r\n    setCita({\r\n      mascota: \"\",\r\n      propietario: \"\",\r\n      fecha: \"\",\r\n      hora: \"\",\r\n      sintomas: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2>Crear Cita</h2>\r\n      {error ? (\r\n        <p className=\"alerta-error\">Todos los campos son obligatorios</p>\r\n      ) : null}\r\n      <form onSubmit={submitCita}>\r\n        <label>Nombre de la Mascota</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"mascota\"\r\n          className=\"u-full-width\"\r\n          placeholder=\"Nombre de la Mascota\"\r\n          onChange={actualizarState}\r\n          value={mascota}\r\n        />\r\n        <label>Nombre del Dueño</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"propietario\"\r\n          className=\"u-full-width\"\r\n          placeholder=\"Nombre del dueño de la Mascota\"\r\n          onChange={actualizarState}\r\n          value={propietario}\r\n        />\r\n        <label>Fecha</label>\r\n        <input\r\n          type=\"date\"\r\n          name=\"fecha\"\r\n          className=\"u-full-width\"\r\n          onChange={actualizarState}\r\n          value={fecha}\r\n        />\r\n        <label>Hora de Ingreso</label>\r\n        <input\r\n          type=\"time\"\r\n          name=\"hora\"\r\n          className=\"u-full-width\"\r\n          onChange={actualizarState}\r\n          value={hora}\r\n        />\r\n        <label>Síntomas</label>\r\n        <textarea\r\n          className=\"u-full-width\"\r\n          name=\"sintomas\"\r\n          onChange={actualizarState}\r\n          value={sintomas}\r\n        ></textarea>\r\n        <button type=\"submit\" className=\"u-full-width button-primary\">\r\n          Agregar Cita\r\n        </button>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Formulario;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport Cita from \"./components/Cita\";\nimport Formulario from \"./components/Formulario\";\nimport PropTypes from \"prop-types\";\n\nfunction App() {\n  // Citas en localStorage\n  let citasIniciales = JSON.parse(localStorage.getItem(\"citas\"));\n  if (!citasIniciales) {\n    citasIniciales = [];\n  }\n\n  // Arreglo de citas\n  const [citas, guardarCitas] = useState(citasIniciales);\n\n  // useEffect para realizar ciertas operaciones cuando el state cambia\n  useEffect(() => {\n    let citasIniciales = JSON.parse(localStorage.getItem(\"citas\"));\n    if (citasIniciales) {\n      localStorage.setItem(\"citas\", JSON.stringify(citas));\n    } else {\n      localStorage.setItem(\"citas\", JSON.stringify([]));\n    }\n  }, [citas]);\n\n  // Función que toma las citas actuales y agregue la nueva cita\n  const crearCita = (cita) => {\n    guardarCitas([...citas, cita]);\n  };\n\n  // Función que elimina una cita por su ID\n  const eliminarCita = (id) => {\n    const nuevasCitas = citas.filter((cita) => cita.id !== id);\n    guardarCitas(nuevasCitas);\n  };\n\n  // Mensaje condicional\n  const titulo = citas.length === 0 ? \"No hay citas\" : \"Administra tus citas\";\n\n  return (\n    <Fragment>\n      <h1>Administrador de Pacientes</h1>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"one-half column\">\n            <Formulario crearCita={crearCita} />\n          </div>\n          <div className=\"one-half column\">\n            <h2>{titulo}</h2>\n            {citas.map((cita) => (\n              <Cita key={cita.id} cita={cita} eliminarCita={eliminarCita} />\n            ))}\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nFormulario.propTypes = {\n  crearCita: PropTypes.func.isRequired,\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}